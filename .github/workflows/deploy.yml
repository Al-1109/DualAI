name: Deploy to VPS
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install FreeRDP
      run: choco install freerdp -y
    
    - name: Deploy via RDP
      env:
        RDP_PASSWORD: ${{ secrets.RDP_PASSWORD }}
      run: |
        try {
          $SecurePassword = ConvertTo-SecureString "$env:RDP_PASSWORD" -AsPlainText -Force
          $Credential = New-Object System.Management.Automation.PSCredential ("AdmVps", $SecurePassword)
          
          # Настраиваем параметры RDP
          $ComputerName = "65.21.73.61"
          $Port = 3389
          
          # Проверяем доступность сервера
          Write-Host "Проверка доступности сервера..."
          $TestConnection = Test-NetConnection -ComputerName $ComputerName -Port $Port -WarningAction SilentlyContinue
          if (-not $TestConnection.TcpTestSucceeded) {
            throw "Сервер недоступен по порту $Port"
          }
          
          # Создаем сессию с расширенными параметрами безопасности
          Write-Host "Установка соединения с сервером..."
          $Session = New-PSSession -ComputerName $ComputerName -Port $Port -Credential $Credential -Authentication Basic -ErrorAction Stop
          
          # Проверяем существование директории
          Write-Host "Проверка директории на сервере..."
          $RemotePath = "C:\Users\AdmVps\DualAI"
          $CheckDir = Invoke-Command -Session $Session -ScriptBlock {
            Test-Path $using:RemotePath
          }
          
          if (-not $CheckDir) {
            Write-Host "Создание директории на сервере..."
            Invoke-Command -Session $Session -ScriptBlock {
              New-Item -ItemType Directory -Path $using:RemotePath -Force
            }
          }
          
          # Копируем файл
          Write-Host "Копирование файла на сервер..."
          Copy-Item "test_deploy.py" -Destination $RemotePath -ToSession $Session -Force
          
          # Запускаем тест
          Write-Host "Запуск тестового скрипта..."
          Invoke-Command -Session $Session -ScriptBlock {
            Set-Location $using:RemotePath
            python test_deploy.py
          }
          
          Write-Host "Деплой успешно завершен"
        }
        catch {
          Write-Host "Ошибка при деплое: $_"
          throw $_
        }
        finally {
          if ($Session) {
            Write-Host "Закрытие сессии..."
            Remove-PSSession $Session -Force -ErrorAction SilentlyContinue
          }
        } 