from http.server import BaseHTTPRequestHandler
import json
import os
import requests
import traceback
from datetime import datetime

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = os.environ.get('TEST_TELEGRAM_BOT_TOKEN')
if not TELEGRAM_BOT_TOKEN:
    TELEGRAM_BOT_TOKEN = "7513434644:AAECYxIDIkmZRjGgUDrP8ur2cZIni53Qy0E"  # Fallback —Ç–æ–∫–µ–Ω

# –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è Telegram API
TELEGRAM_API_URL = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}"

def send_telegram_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telegram API."""
    url = f"{TELEGRAM_API_URL}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "Markdown"
    }
    
    if reply_markup:
        payload["reply_markup"] = json.dumps(reply_markup)
    
    try:
        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ {chat_id}: {text}")
        response = requests.post(url, json=payload)
        print(f"–û—Ç–≤–µ—Ç API: {response.text}")
        return {"ok": True, "response": response.text}
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        traceback.print_exc()
        return {"ok": False, "error": str(e)}

class handler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'application/json')
        self.end_headers()
        
        response_data = {
            'status': 'ok',
            'message': 'Webhook –∞–∫—Ç–∏–≤–µ–Ω',
            'timestamp': str(datetime.now())
        }
        
        self.wfile.write(json.dumps(response_data).encode())
        return
    
    def do_POST(self):
        try:
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            
            # –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            self.wfile.write(json.dumps({'ok': True}).encode())
            
            # –¢–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            update = json.loads(post_data.decode('utf-8'))
            print(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {json.dumps(update)}")
            
            if 'message' in update and 'text' in update['message']:
                chat_id = update['message']['chat']['id']
                text = update['message']['text']
                user = update['message']['from'].get('first_name', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user} ({chat_id}): {text}")
                
                if text == '/start':
                    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
                    keyboard = {
                        "inline_keyboard": [
                            [{"text": "–û –±–æ—Ç–µ", "callback_data": "info"}],
                            [{"text": "–¢–µ—Å—Ç", "callback_data": "test"}]
                        ]
                    }
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                    send_telegram_message(
                        chat_id, 
                        f"üëã –ü—Ä–∏–≤–µ—Ç, {user}!\n\n–Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ DualAI.",
                        keyboard
                    )
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Ö–æ
                    send_telegram_message(chat_id, f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏
            elif 'callback_query' in update:
                callback = update['callback_query']
                chat_id = callback['message']['chat']['id']
                data = callback['data']
                
                print(f"–ü–æ–ª—É—á–µ–Ω callback —Å –¥–∞–Ω–Ω—ã–º–∏: {data}")
                
                if data == 'info':
                    send_telegram_message(chat_id, "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ DualAI –Ω–∞ Vercel.")
                else:
                    send_telegram_message(chat_id, "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            
            return
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
            traceback.print_exc()
            return 